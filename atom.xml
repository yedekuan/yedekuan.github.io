<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YeDeKuan&#39;s blog</title>
  <icon>https://www.gravatar.com/avatar/43f2717f8e10f70872a79c0f10077281</icon>
  <subtitle>hello,YeXiaoTang</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-20T05:00:48.457Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>叶德宽</name>
    <email>yedekuan@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TCPIP网络编程</title>
    <link href="http://yoursite.com/2018/08/20/TCPIP%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/08/20/TCPIP网络编程/</id>
    <published>2018-08-20T03:30:23.000Z</published>
    <updated>2018-08-20T05:00:48.457Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-理解网络编程和套接字"><a href="#第一章-理解网络编程和套接字" class="headerlink" title="第一章 理解网络编程和套接字"></a>第一章 理解网络编程和套接字</h1><h2 id="1-1-理解网络编程和套接字"><a href="#1-1-理解网络编程和套接字" class="headerlink" title="1.1 理解网络编程和套接字"></a>1.1 理解网络编程和套接字</h2><p><strong>SERVER</strong></p><ol><li><p>调用socket函数创建套接字</p></li><li><p>调用bind函数分配IP地址和端口号</p></li><li><p>调用listen函数转化为可接收请求状态</p></li><li><p>调用accept函数受理连接的请求</p><p><strong>server-linux</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">error_handing</span><span class="params">(<span class="keyword">char</span>* message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">fputs</span>(message,<span class="built_in">stderr</span>);</span><br><span class="line">    fpuc(<span class="string">'\n'</span>,<span class="built_in">stderr</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> serv_sock;</span><br><span class="line">    <span class="keyword">int</span> clnt_sock;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serv_addr</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">clnt_addr</span>;</span></span><br><span class="line">    <span class="keyword">socklen_t</span>   clnt_addr_size;</span><br><span class="line">    <span class="keyword">char</span> message[] = <span class="string">"hello World!"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(argc!=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"usage: %s &lt;port&gt;\n"</span>,argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//NO1</span></span><br><span class="line">    serv_sock = socket(PF_INET,SOCK_STREAM,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(serv_sock == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">         error_handing(<span class="string">"sock() error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(&amp;serv_addr,<span class="number">0</span>,<span class="keyword">sizeof</span>(serv_addr));</span><br><span class="line">    serv_addr.sin_family = AF_INET;</span><br><span class="line">    serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">    serv_addr.sin_port = htons(atoi(argv[<span class="number">1</span>]));</span><br><span class="line"></span><br><span class="line"><span class="comment">//NO2</span></span><br><span class="line">    <span class="keyword">if</span>(bind(serv_sock,(struct sockaddr*)&amp;serv_addr,<span class="keyword">sizeof</span>(serv_addr))==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        error_handing(<span class="string">"bind() error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//NO3</span></span><br><span class="line">    <span class="keyword">if</span>(listen(serv_sock,<span class="number">5</span>)==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        error_handing(<span class="string">"listen() error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    clnt_addr_size = <span class="keyword">sizeof</span>(clnt_addr);</span><br><span class="line"><span class="comment">//NO4</span></span><br><span class="line">    clnt_sock = accept(serv_sock,(struct sockaddr*)&amp;clnt_addr,&amp;clnt_addr_size);</span><br><span class="line">    <span class="keyword">if</span>(clnt_sock == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        error_handing(<span class="string">"accept() error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    write(clnt_sock,message,<span class="keyword">sizeof</span>(message));</span><br><span class="line">    close(clnt_sock);</span><br><span class="line">    close(serv_sock);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>server-windows</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ErrorHanding</span><span class="params">(<span class="keyword">char</span>* massage)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WSADATAwsaData;</span><br><span class="line">SOCKEThServSock, hClntSock;</span><br><span class="line">SOCKADDR_INservAddr, clntAddr;</span><br><span class="line"><span class="keyword">int</span>szClntAddr;</span><br><span class="line"><span class="keyword">char</span> message[] =  <span class="string">"hello world\n"</span> ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Usage: %s &lt;port&gt;\n,argv[0]"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化套接字</span></span><br><span class="line"><span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>,<span class="number">2</span>),&amp;wsaData)!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"WSAStartup() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建套接字</span></span><br><span class="line">hServSock = socket(PF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (hServSock == INVALID_SOCKET);</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"socket() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(&amp;servAddr, <span class="number">0</span>, <span class="keyword">sizeof</span>(servAddr));</span><br><span class="line">servAddr.sin_family = AF_INET;</span><br><span class="line">servAddr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">servAddr.sin_port = htonl(atoi(argv[<span class="number">1</span>]));</span><br><span class="line"><span class="comment">//分配IP和端口</span></span><br><span class="line"><span class="keyword">if</span> (bind(hServSock,(SOCKADDR*)&amp;servAddr,<span class="keyword">sizeof</span>(servAddr))==SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"bind() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使套接字成为服务端套接字</span></span><br><span class="line"><span class="keyword">if</span> (listen(hServSock,<span class="number">5</span>)==SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"listen() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//受理客户端连接请求</span></span><br><span class="line">szClntAddr = <span class="keyword">sizeof</span>(clntAddr);</span><br><span class="line">hClntSock = accept(hServSock,(SOCKADDR*)&amp;clntAddr, &amp;szClntAddr);</span><br><span class="line"><span class="keyword">if</span> (hClntSock == INVALID_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"accept() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">send(hServSock, message, <span class="keyword">sizeof</span>(message), <span class="number">0</span>);</span><br><span class="line"><span class="comment">//注销套接字字库</span></span><br><span class="line">closesocket(hClntSock);</span><br><span class="line">closesocket(hServSock);</span><br><span class="line">WSACleanup();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ErrorHanding</span><span class="params">(<span class="keyword">char</span>* message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">fputs</span>(message, <span class="built_in">stderr</span>);</span><br><span class="line">fputc(<span class="string">'\n'</span>, <span class="built_in">stderr</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><strong>CLIENT</strong></p><ol><li><p>调用socket函数创建套接字</p></li><li><p>调用connect函数向服务器端发送连接请求</p><p><strong>client-linux</strong></p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">error_handing</span><span class="params">(<span class="keyword">char</span>* message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">fputs</span>(message,<span class="built_in">stderr</span>);</span><br><span class="line">    fpuc(<span class="string">'\n'</span>,<span class="built_in">stderr</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sock;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serv_addr</span>;</span></span><br><span class="line">    <span class="keyword">char</span> message[<span class="number">30</span>] ;</span><br><span class="line">    <span class="keyword">int</span> str_len;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(argc!=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"usage: %s &lt;ip&gt;&lt;port&gt;\n"</span>,argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//NO1</span></span><br><span class="line">    serv_sock = socket(PF_INET,SOCK_STREAM,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(serv_sock == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        error_handing(<span class="string">"sock() error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(&amp;serv_addr,<span class="number">0</span>,<span class="keyword">sizeof</span>(serv_addr));</span><br><span class="line">    serv_addr.sin_family = AF_INET;</span><br><span class="line">    serv_addr.sin_addr.s_addr = inet_addr(argv[<span class="number">1</span>]);</span><br><span class="line">    serv_addr.sin_port = htons(atoi(argv[<span class="number">2</span>]));</span><br><span class="line"></span><br><span class="line"><span class="comment">//NO2</span></span><br><span class="line">    <span class="keyword">if</span>(connect(sock,(struct sockaddr*)&amp;ser_addr,<span class="keyword">sizeof</span>(serv_addr))==<span class="number">-1</span>)</span><br><span class="line">        error_handing(<span class="string">"connect() error"</span>);</span><br><span class="line">    str_len = read(sock,message,<span class="keyword">sizeof</span>(message)<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">if</span>(str_len == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        error_handing(<span class="string">"read() error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Message from server:%s \n"</span>,message);</span><br><span class="line"></span><br><span class="line">    close(sock);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>client-windows</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ErrorHanding</span><span class="params">(<span class="keyword">char</span>* massage)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WSADATAwsaData;</span><br><span class="line">SOCKEThSock;</span><br><span class="line">SOCKADDR_IN servAddr;</span><br><span class="line"><span class="keyword">char</span> message[<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span>  <span class="built_in">strlen</span>;</span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Usage: %s &lt;ip&gt; &lt;port&gt;\n,argv[0],argv[1]"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化套接字</span></span><br><span class="line"><span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"WSAStartup() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建套接字</span></span><br><span class="line">hSock = socket(PF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (hSock == INVALID_SOCKET);</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"socket() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(&amp;servAddr, <span class="number">0</span>, <span class="keyword">sizeof</span>(servAddr));</span><br><span class="line">servAddr.sin_family = AF_INET;</span><br><span class="line">servAddr.sin_addr.s_addr = inet_addr(argv[<span class="number">1</span>]);</span><br><span class="line">servAddr.sin_port = htons(atoi(argv[<span class="number">2</span>]));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (connect(hSock,(SOCKADDR*)&amp;servAddr,<span class="keyword">sizeof</span>(servAddr))==SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"connect() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">strlen</span> = recv(hSock, message, <span class="keyword">sizeof</span>(message)<span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span> == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ErrorHanding(<span class="string">"read() error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"message from server:%s \n"</span>, message);</span><br><span class="line"><span class="comment">//注销套接字字库</span></span><br><span class="line">closesocket(hSock);</span><br><span class="line">WSACleanup();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ErrorHanding</span><span class="params">(<span class="keyword">char</span>* message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">fputs</span>(message, <span class="built_in">stderr</span>);</span><br><span class="line">fputc(<span class="string">'\n'</span>, <span class="built_in">stderr</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一章-理解网络编程和套接字&quot;&gt;&lt;a href=&quot;#第一章-理解网络编程和套接字&quot; class=&quot;headerlink&quot; title=&quot;第一章 理解网络编程和套接字&quot;&gt;&lt;/a&gt;第一章 理解网络编程和套接字&lt;/h1&gt;&lt;h2 id=&quot;1-1-理解网络编程和套接字&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="网络 windows linux TCPIP" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C-windows-linux-TCPIP/"/>
    
  </entry>
  
  <entry>
    <title>从零一起写modbus转出</title>
    <link href="http://yoursite.com/2018/08/16/%E4%BB%8E%E9%9B%B6%E4%B8%80%E8%B5%B7%E5%86%99modbus%E8%BD%AC%E5%87%BA/"/>
    <id>http://yoursite.com/2018/08/16/从零一起写modbus转出/</id>
    <published>2018-08-16T01:12:59.000Z</published>
    <updated>2018-08-16T12:48:53.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、程序设计"><a href="#一、程序设计" class="headerlink" title="一、程序设计"></a>一、程序设计</h1><ol><li><p>modbus_app 主要功能</p></li><li><p>modbus_link  链接相关</p></li><li><p>modbus_cfg   配置相关</p></li></ol><p>   modbus_app.h 定义要用的结构体</p>   <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">MODBUSCFG</span> <span class="title">MODBUSCFG</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MODBUSCFG</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">byte_t</span>link_type;</span><br><span class="line"><span class="keyword">serial_t</span>serialDrv;</span><br><span class="line"><span class="keyword">socket_t</span>socketDrv;</span><br><span class="line"><span class="keyword">int</span>tcp_mode;</span><br><span class="line"><span class="keyword">byte_t</span>pubnet_type;</span><br><span class="line"><span class="keyword">uint16_t</span>pubnet_heart_time;</span><br><span class="line"><span class="keyword">char</span>    pubnet_identity[<span class="number">64</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>   <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">MODBUSPDU</span> <span class="title">MODBUSPDU</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MODBUSPDU</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">byte_t</span>funCode;<span class="comment">/**&lt; function code */</span></span><br><span class="line"><span class="keyword">byte_t</span>len;<span class="comment">/**&lt; data length*/</span></span><br><span class="line"><span class="keyword">byte_t</span>data[<span class="number">253</span>];<span class="comment">/**&lt; uart max 253; tcp max 249  */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>   <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">MODBUSADU</span> <span class="title">MODBUSADU</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MODBUSADU</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">byte_t</span>link_type;<span class="comment">/**&lt; 0:uart, 1:tcp*/</span></span><br><span class="line"><span class="keyword">uint16_t</span>eventID;<span class="comment">/**&lt; request/repoonse event ID  */</span></span><br><span class="line"><span class="keyword">uint16_t</span>protocolID;<span class="comment">/**&lt; protocol ID 0:MODBUS*/</span></span><br><span class="line"><span class="keyword">uint16_t</span>length;<span class="comment">/**&lt; the remained byte length*/</span></span><br><span class="line"><span class="comment">/* UART 1~247 TCP:0xFF or 0*/</span></span><br><span class="line"><span class="keyword">byte_t</span>address;<span class="comment">/**&lt; UART address or remote substation ID*/</span></span><br><span class="line">MODBUSPDUpdu;<span class="comment">/**&lt; point to protocol data unit*/</span></span><br><span class="line"><span class="keyword">uint16_t</span>crc;<span class="comment">/**&lt; need it when link_type is uart*/</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>   <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">modbus_link_t</span> <span class="title">modbus_link_t</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">modbus_link_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">uint32_t</span> address; <span class="comment">//串口或者IP地址</span></span><br><span class="line"><span class="keyword">uint16_t</span> dgt_startaddr;</span><br><span class="line"><span class="keyword">uint16_t</span> dgt_endaddr;</span><br><span class="line"><span class="keyword">uint16_t</span> ana_startaddr;</span><br><span class="line"><span class="keyword">uint16_t</span> ana_endaddr;</span><br><span class="line"><span class="keyword">uint16_t</span> plu_startaddr;</span><br><span class="line"><span class="keyword">uint16_t</span> plu_endaddr;</span><br><span class="line"><span class="keyword">uint16_t</span> con_startaddr;</span><br><span class="line"><span class="keyword">uint16_t</span> con_endaddr;</span><br><span class="line"><span class="keyword">uint16_t</span> regu_startaddr;<span class="comment">//遥调信息起始点</span></span><br><span class="line"><span class="keyword">uint16_t</span> regu_endaddr;<span class="comment">//遥调信息结束点</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">byte_t</span> ctrlMode;<span class="comment">//是否直控 1直控0需要选择执行</span></span><br><span class="line"><span class="keyword">uint16_t</span> ana_s4addr;<span class="comment">//4字节遥测起始点</span></span><br><span class="line"><span class="keyword">uint16_t</span> ana_e4addr;<span class="comment">//4字节遥测结束点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">byte_t</span> con_overtime;<span class="comment">//遥控选择、执行的超时时间</span></span><br><span class="line">MODBUSADU   adu;</span><br><span class="line"><span class="keyword">ied_t</span> *ied;</span><br><span class="line"><span class="keyword">void</span>     *cookie;</span><br><span class="line"><span class="keyword">apr_thread_event_t</span> *event; <span class="comment">//指向modbusclient_t 中的event</span></span><br><span class="line"><span class="keyword">byte_t</span>connect_status;<span class="comment">/**tcp连接状态，STATUS_BREAKOFF:未连接，STATUS_NORMAL:已连接*/</span></span><br><span class="line"><span class="keyword">uint16_t</span>pubnet_heart_timer;<span class="comment">/**&lt; 公网心跳计数器 */</span></span><br><span class="line"><span class="keyword">uint16_t</span>t0_time;   <span class="comment">/**&lt; 公网连接计数器 */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">typedef struct modbusclient_t modbusclient_t;</span><br><span class="line">struct modbusclient</span><br><span class="line">&#123;</span><br><span class="line">apr_pool_t*pool;</span><br><span class="line">node_t*node;</span><br><span class="line">ied_t*ied;</span><br><span class="line">modbus_link_t *iedk;</span><br><span class="line">MODBUSCFG   cfg;</span><br><span class="line">driver_t    *driver;</span><br><span class="line">apr_thread_event_t *event; /*规约内部信号量*/</span><br><span class="line">ipcclient_t*ipcclient;    /*与服务器进行数据交换的结构*/</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、程序设计&quot;&gt;&lt;a href=&quot;#一、程序设计&quot; class=&quot;headerlink&quot; title=&quot;一、程序设计&quot;&gt;&lt;/a&gt;一、程序设计&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;modbus_app 主要功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;modbus_link 
      
    
    </summary>
    
    
      <category term="modbus 转出" scheme="http://yoursite.com/tags/modbus-%E8%BD%AC%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>Python3网络爬虫开发实战</title>
    <link href="http://yoursite.com/2018/08/14/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2018/08/14/Python3网络爬虫开发实战/</id>
    <published>2018-08-14T15:04:15.000Z</published>
    <updated>2018-08-15T02:59:05.125Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-开发环境配置"><a href="#第一章-开发环境配置" class="headerlink" title="第一章 开发环境配置"></a>第一章 开发环境配置</h1><h2 id="1-1-Python3的安装"><a href="#1-1-Python3的安装" class="headerlink" title="1.1 Python3的安装"></a>1.1 Python3的安装</h2><p>官方网站：<a href="http://python.org" target="_blank" rel="noopener">http://python.org</a></p><h3 id="1-1-1-Windows下的安装"><a href="#1-1-1-Windows下的安装" class="headerlink" title="1.1.1 Windows下的安装"></a>1.1.1 Windows下的安装</h3><h3 id="1-1-2-Linux下的安装"><a href="#1-1-2-Linux下的安装" class="headerlink" title="1.1.2 Linux下的安装"></a>1.1.2 Linux下的安装</h3><h3 id="1-1-3-Mac下的安装"><a href="#1-1-3-Mac下的安装" class="headerlink" title="1.1.3 Mac下的安装"></a>1.1.3 Mac下的安装</h3><h2 id="1-2-请求库的安装"><a href="#1-2-请求库的安装" class="headerlink" title="1.2  请求库的安装"></a>1.2  请求库的安装</h2><p>爬虫分为抓取页面、分析页面、存储数据</p><h3 id="1-2-1-request的安装"><a href="#1-2-1-request的安装" class="headerlink" title="1.2.1 request的安装"></a>1.2.1 request的安装</h3><p>pip install requests </p><h2 id="1-2-2-Selenium的安装"><a href="#1-2-2-Selenium的安装" class="headerlink" title="1.2.2 Selenium的安装"></a>1.2.2 Selenium的安装</h2><p>pip install selenium</p><p>自动化测试工具，利用它驱动浏览器执行特定的动作，如点击、下拉等。 </p><h3 id="1-2-3-ChromeDrive的安装"><a href="#1-2-3-ChromeDrive的安装" class="headerlink" title="1.2.3 ChromeDrive的安装"></a>1.2.3 ChromeDrive的安装</h3><p>chrome</p><h3 id="1-2-4-GeckoDriver"><a href="#1-2-4-GeckoDriver" class="headerlink" title="1.2.4 GeckoDriver"></a>1.2.4 GeckoDriver</h3><p>firefox</p><h3 id="1-2-5-PhantomJS的安装"><a href="#1-2-5-PhantomJS的安装" class="headerlink" title="1.2.5 PhantomJS的安装"></a>1.2.5 PhantomJS的安装</h3><p>无界面可脚本编程的WebKit浏览器引擎：DOM CSS JSON Canvas SVG</p><h3 id="1-2-6-aiohttp的安装"><a href="#1-2-6-aiohttp的安装" class="headerlink" title="1.2.6 aiohttp的安装"></a>1.2.6 aiohttp的安装</h3><p>提供异步web服务的库</p><p>pip install aiohttp</p><p>cchardet aiodns没有正确安装上 待查</p><h2 id="1-3-解析库的安装"><a href="#1-3-解析库的安装" class="headerlink" title="1.3 解析库的安装"></a>1.3 解析库的安装</h2><h3 id="1-3-1-lxml的安装"><a href="#1-3-1-lxml的安装" class="headerlink" title="1.3.1 lxml的安装"></a>1.3.1 lxml的安装</h3><h3 id="1-3-2-Beautiful-Soup的安装"><a href="#1-3-2-Beautiful-Soup的安装" class="headerlink" title="1.3.2 Beautiful Soup的安装"></a>1.3.2 Beautiful Soup的安装</h3><p>HTML或xml的解析库</p><h3 id="1-3-3-pyquery的安装"><a href="#1-3-3-pyquery的安装" class="headerlink" title="1.3.3 pyquery的安装"></a>1.3.3 pyquery的安装</h3><h3 id="1-3-4-tesserocr的安装"><a href="#1-3-4-tesserocr的安装" class="headerlink" title="1.3.4 tesserocr的安装"></a>1.3.4 tesserocr的安装</h3><p>验证码处理</p><h2 id="1-4-数据库的处理"><a href="#1-4-数据库的处理" class="headerlink" title="1.4 数据库的处理"></a>1.4 数据库的处理</h2><h3 id="1-4-1-MySQL的安装"><a href="#1-4-1-MySQL的安装" class="headerlink" title="1.4.1 MySQL的安装"></a>1.4.1 MySQL的安装</h3><h3 id="1-4-2-MongoDB的安装"><a href="#1-4-2-MongoDB的安装" class="headerlink" title="1.4.2 MongoDB的安装"></a>1.4.2 MongoDB的安装</h3><p>先未安装</p><h3 id="1-4-3-Redis的安装"><a href="#1-4-3-Redis的安装" class="headerlink" title="1.4.3 Redis的安装"></a>1.4.3 Redis的安装</h3><p>先未安装</p><h2 id="1-5-存储库的安装"><a href="#1-5-存储库的安装" class="headerlink" title="1.5 存储库的安装"></a>1.5 存储库的安装</h2><h3 id="1-5-1-PyMySQL的安装"><a href="#1-5-1-PyMySQL的安装" class="headerlink" title="1.5.1 PyMySQL的安装"></a>1.5.1 PyMySQL的安装</h3><p>先未安装</p><h3 id="1-5-2-PyMongo的安装"><a href="#1-5-2-PyMongo的安装" class="headerlink" title="1.5.2 PyMongo的安装"></a>1.5.2 PyMongo的安装</h3><p>先未安装</p><h3 id="1-5-3-redis-py的安装"><a href="#1-5-3-redis-py的安装" class="headerlink" title="1.5.3 redis-py的安装"></a>1.5.3 redis-py的安装</h3><p>先未安装</p><h3 id="1-5-4-RedisDump的安装"><a href="#1-5-4-RedisDump的安装" class="headerlink" title="1.5.4 RedisDump的安装"></a>1.5.4 RedisDump的安装</h3><p>先未安装</p><h2 id="1-6-web库的安装"><a href="#1-6-web库的安装" class="headerlink" title="1.6 web库的安装"></a>1.6 web库的安装</h2><h3 id="1-6-1-flask的安装"><a href="#1-6-1-flask的安装" class="headerlink" title="1.6.1 flask的安装"></a>1.6.1 flask的安装</h3><h3 id="1-6-2-Tornado的安装"><a href="#1-6-2-Tornado的安装" class="headerlink" title="1.6.2 Tornado的安装"></a>1.6.2 Tornado的安装</h3><h2 id="1-7-APP爬取相关库的安装"><a href="#1-7-APP爬取相关库的安装" class="headerlink" title="1.7 APP爬取相关库的安装"></a>1.7 APP爬取相关库的安装</h2><h3 id="1-7-1-Charles的安装"><a href="#1-7-1-Charles的安装" class="headerlink" title="1.7.1 Charles的安装"></a>1.7.1 Charles的安装</h3><h3 id="1-7-2-mitmproxy的安装"><a href="#1-7-2-mitmproxy的安装" class="headerlink" title="1.7.2 mitmproxy的安装"></a>1.7.2 mitmproxy的安装</h3><h3 id="1-7-3-APPium的安装"><a href="#1-7-3-APPium的安装" class="headerlink" title="1.7.3 APPium的安装"></a>1.7.3 APPium的安装</h3><h2 id="1-8-爬虫框架"><a href="#1-8-爬虫框架" class="headerlink" title="1.8 爬虫框架"></a>1.8 爬虫框架</h2><h3 id="1-8-1-pyspider"><a href="#1-8-1-pyspider" class="headerlink" title="1.8.1 pyspider"></a>1.8.1 pyspider</h3><h3 id="1-8-2-Scrapy的安装"><a href="#1-8-2-Scrapy的安装" class="headerlink" title="1.8.2 Scrapy的安装"></a>1.8.2 Scrapy的安装</h3><h3 id="1-8-3-Scrapy-Splash的安装"><a href="#1-8-3-Scrapy-Splash的安装" class="headerlink" title="1.8.3 Scrapy-Splash的安装"></a>1.8.3 Scrapy-Splash的安装</h3><h3 id="1-8-4-Scrapy-Redis的安装"><a href="#1-8-4-Scrapy-Redis的安装" class="headerlink" title="1.8.4 Scrapy-Redis的安装"></a>1.8.4 Scrapy-Redis的安装</h3><h2 id="1-9-部署相关库的安装"><a href="#1-9-部署相关库的安装" class="headerlink" title="1.9 部署相关库的安装"></a>1.9 部署相关库的安装</h2><h3 id="1-9-1-Docker的安装"><a href="#1-9-1-Docker的安装" class="headerlink" title="1.9.1 Docker的安装"></a>1.9.1 Docker的安装</h3><h3 id="1-9-2-Scrapyd的安装"><a href="#1-9-2-Scrapyd的安装" class="headerlink" title="1.9.2 Scrapyd的安装"></a>1.9.2 Scrapyd的安装</h3><h3 id="1-9-3-Scrapyd-Client的安装"><a href="#1-9-3-Scrapyd-Client的安装" class="headerlink" title="1.9.3 Scrapyd-Client的安装"></a>1.9.3 Scrapyd-Client的安装</h3><h3 id="1-9-4-Scrapyd-API的安装"><a href="#1-9-4-Scrapyd-API的安装" class="headerlink" title="1.9.4 Scrapyd API的安装"></a>1.9.4 Scrapyd API的安装</h3><h3 id="1-9-5-Scrapyrt的安装"><a href="#1-9-5-Scrapyrt的安装" class="headerlink" title="1.9.5 Scrapyrt的安装"></a>1.9.5 Scrapyrt的安装</h3><h3 id="1-9-6-Gerapy的安装"><a href="#1-9-6-Gerapy的安装" class="headerlink" title="1.9.6 Gerapy的安装"></a>1.9.6 Gerapy的安装</h3><h1 id="第三章-基本库的使用"><a href="#第三章-基本库的使用" class="headerlink" title="第三章 基本库的使用"></a>第三章 基本库的使用</h1><h2 id="3-1-使用urllib"><a href="#3-1-使用urllib" class="headerlink" title="3.1 使用urllib"></a>3.1 使用urllib</h2><p>request </p><p>error</p><p>parse</p><p>robotparser</p><h3 id="3-1-1-发送请求"><a href="#3-1-1-发送请求" class="headerlink" title="3.1.1 发送请求"></a>3.1.1 发送请求</h3><ol><li>urlopen()</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一章-开发环境配置&quot;&gt;&lt;a href=&quot;#第一章-开发环境配置&quot; class=&quot;headerlink&quot; title=&quot;第一章 开发环境配置&quot;&gt;&lt;/a&gt;第一章 开发环境配置&lt;/h1&gt;&lt;h2 id=&quot;1-1-Python3的安装&quot;&gt;&lt;a href=&quot;#1-1-Pyt
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对时</title>
    <link href="http://yoursite.com/2018/08/14/GPS%E9%80%9A%E8%AE%AF/"/>
    <id>http://yoursite.com/2018/08/14/GPS通讯/</id>
    <published>2018-08-14T05:23:03.037Z</published>
    <updated>2018-08-14T08:41:41.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、GPS规约"><a href="#一、GPS规约" class="headerlink" title="一、GPS规约"></a>一、GPS规约</h2><h3 id="1、-ST系列-科汇公司"><a href="#1、-ST系列-科汇公司" class="headerlink" title="1、 ST系列(科汇公司)"></a>1、 ST系列(科汇公司)</h3><p>程序名 ptKHGpsttyd</p><p><img src="http://ydkblog.oss-cn-hangzhou.aliyuncs.com/18-8-14/64455898.jpg" alt="ST"></p><p>其中，</p><p>S 与秒脉冲（PPS）的前沿对齐，装置收到卫星信号则发送字符S， 装置失步就停发字符S，S的ASCII码为53H；</p><p>T 为发送时间信息的信息头，T的ASCII码为54H；</p><p>然后依次是小时的十位、个位、分钟的十位、个位…直到年的个位信息，分别为0-9的ASCII码（30H-39H）；</p><p>校验字节是小时的十位、个位、分钟的十位、个位…直到年的个位信息逐字节异或后再非运算的结果（即：异或非校验）；</p><p>A为发送时间信息的信息结尾，A的ASCII码为41H。 </p><p>例：2006年6月15日23时19分47秒，与卫星同步，所发报文为</p><p>​        53H 54H 32H 33H 31H 39H 34H 37H 31H 35H 30H 36H 32H 30H 30H 36H F3H 41H</p><p><strong>通讯参数</strong> 报文数据位8位，停止位1位，无校验，波特率9600 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、GPS规约&quot;&gt;&lt;a href=&quot;#一、GPS规约&quot; class=&quot;headerlink&quot; title=&quot;一、GPS规约&quot;&gt;&lt;/a&gt;一、GPS规约&lt;/h2&gt;&lt;h3 id=&quot;1、-ST系列-科汇公司&quot;&gt;&lt;a href=&quot;#1、-ST系列-科汇公司&quot; class=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/08/14/hello-world/"/>
    <id>http://yoursite.com/2018/08/14/hello-world/</id>
    <published>2018-08-14T02:27:46.177Z</published>
    <updated>2018-08-14T02:27:46.177Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
